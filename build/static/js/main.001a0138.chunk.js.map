{"version":3,"sources":["helper/constants.js","actions/userActions.js","actions/tasktypeAction.js","actions/taskAction.js","actions/examsAction.js","pages/admin/AdminDashboard.js","components/dataTable/EnhancedTableHead.js","components/ConfirmModal.js","components/dataTable/EnhancedTableToolbar.js","components/dataTable/EnhancedTable.js","components/modals/EditModal.js","components/modals/EditExamModal.js","pages/admin/ExamEditPage.js","pages/admin/ExamsPage.js","components/modals/EdittaskModal.js","pages/admin/TasksPage.js","pages/admin/TasktypesPage.js","pages/auth/SigninPage.js","actions/scheduleActions.js","components/modals/LoadModal.js","components/SideBar.js","helper/utils.js","components/modals/ScheduleModal.js","pages/calendar/calendarPage.js","components/RouteGenerator.js","routes/index.js","App.jsx","reducers/examReducer.js","reducers/tasktypesReducer.js","reducers/tasksReducer.js","reducers/scheduleReducer.js","reducers/userSettingReducer.js","reducers/messageReducer.js","store.js","reducers/usersReducer.js","components/Toaster.js","index.jsx"],"names":["weeks","id","value","isChecked","menuLists","name","icon","link","API_URL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","TASK_TYPES_REQUEST","TASK_TYPES_GET_SUCCESS","TASK_TYPES_CREATE_SUCCESS","TASK_TYPES_UPDATE_SUCCESS","TASK_TYPES_DELETE_SUCCESS","TASK_TYPES_FAIL","TASKS_REQUEST","TASKS_GET_SUCCESS","TASKS_CREATE_SUCCESS","TASKS_UPDATE_SUCCESS","TASKS_DELETE_SUCCESS","TASKS_FAIL","EXAMS_REQUEST","EXAMS_GET_SUCCESS","EXAMS_CREATE_SUCCESS","EXAMS_UPDATE_SUCCESS","EXAMS_DELETE_SUCCESS","EXAMS_FAIL","SCHEDULE_REQUEST","SCHEDULE_SET_SUCCESS","SCHEDULE_FAIL","USER_SETTING_SAVE_REQUEST","messageActionTypes","logout","dispatch","getState","type","document","location","href","tasktypeActions","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","message","response","tasktype","console","log","post","put","_id","lists","delete","taskActions","task","examsAction","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","zIndex","menuButton","marginRight","spacing","sidebar","paddingTop","toolbar","mixins","drawerPaper","content","flexGrow","padding","userIcon","color","AdminDashboard","window","navigate","useNavigate","useDispatch","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleGotoLink","useCallback","handleClose","handleDrawerToggle","anchorEl","setAnchorEl","useEffect","className","Divider","List","map","list","index","ListItem","button","onClick","ListItemIcon","ListItemText","primary","container","undefined","body","CssBaseline","AppBar","position","Toolbar","src","alt","IconButton","aria-label","edge","Typography","variant","noWrap","Button","aria-controls","aria-haspopup","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","xsDown","labelName","taskType","action","spinTime","time","chapterNum","videos","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rows","onRequestSort","tabValue","taskTypes","useSelector","state","includes","headcells","useMemo","head","key","push","numeric","disablePadding","label","TableHead","TableRow","TableCell","Checkbox","indeterminate","length","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","property","visuallyHidden","Transition","forwardRef","ref","Slide","ConfirmModal","setOpen","deleteFn","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","dark","title","flex","EnhancedTableToolbar","pageIndex","setSelected","setTasks","setIsloading","filter","clsx","component","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","marginTop","marginBottom","table","minWidth","cursor","textDecoration","border","clip","height","margin","overflow","top","EnhancedTable","setIsAdd","feedData","onUpdateClick","isAdd","filteredTaskTypes","item","idx","createData","getTasktypeName","seletedType","setOrder","setOrderBy","selected","Paper","TableContainer","Table","target","newSelecteds","n","TableBody","row","isItemSelected","indexOf","labelId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","slice","handleClick","Object","entries","minHeight","form","flexDirection","formControl","validatorForm","formControlLabel","modalDescription","EditModal","flag","initData","findIndex","datum","setData","onChangeData","e","handleSubmit","preventDefault","Number","subheader","fullWidth","onSubmit","FormControl","validators","errorMessages","EditExamModal","defaultVideos","optionVideos","initTaskname","initSpintime","initTime","initChapterNum","initvideoTaskId","initVideos","tasks","taskName","setTaskname","videoTaskId","setVideoTaskId","setChapterNum","setSpintime","setTime","taskTypeId","setTasktypeId","taskTypeName","selectedVideos","setSelectedVideos","getVideoName","selectedTask","video","onChangeTaskname","onChangeTask","onChangeChapterNum","onChangeSpintime","onChangeTime","onChangeTasktype","onChangeVideoSetting","connectedVideos","newState","InputLabel","Select","disabled","TextField","required","isMulti","options","defaultValue","fontSize","examName","submitBtn","maxWidth","alignSelf","tabPanel","TabPanel","children","other","hidden","Box","p","ExamEditPage","useLocation","exams","selectedExam","exam","setExamname","isLoading","setTabValue","onChangeExamName","handleSave","Grid","justify","alignItems","sm","md","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","a11yProps","axis","onChangeIndex","ExamsPage","handleClickOpen","EdittaskModal","initTasktype_id","setTypeName","forEach","TasksPage","TasktypesPage","formContainer","formLayout","justifyContent","SigninPage","email","setEmail","password","setPassword","loading","error","setTimeout","boxShadow","fontWeight","m","textAlign","success","login","xs","size","scheduleAction","eventData","schedule","userSetting","LoadModal","loadData","onChangeEmail","fontFamily","forminput","select","Sidebar","username","setUsername","selectedExamId","setSelectedexamId","availableDays","setAvailabledays","hours","setHours","mins","setMins","testDate","setTestdate","autoTestDate","setautoTestdate","reminder","setReminder","sync","setSync","submitted","setSubmitted","loaded","workHours","workDays","Math","floor","getTimeFromMins","targetTestDate","Date","handleUsername","handleEmail","reduce","accu","handleExamchange","hrs","$hrs","handleAllChecked","day","handleCheckChieldElement","handleTestdate","handleSetDate","date","handleReminder","handleSync","handleHours","handleMins","loadHandler","submitHandler","FormControlLabel","control","FormLabel","RadioGroup","Radio","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","style","typography","paddingBottom","ScheduleModal","selectedSchedule","closeModal","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CalendarPage","weekendsVisible","handleDates","rangeInfo","schedules","setSelectedSchdule","handleEventClick","_def","publicId","extendedProps","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","datesSet","events","eventClick","RouteGenerator","isAdmin","useRoutes","path","element","exact","to","App","initialState","persistConfig","storage","rootReducer","combineReducers","updated_index","info","persistedReducer","persistReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","Toaster","addToast","useToasts","appearance","autoDismiss","timeId","clearTimeout","THEME","createMuiTheme","render","history","createBrowserHistory","autoDismissTimeout","placement","getElementById"],"mappings":"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","file":"static/js/main.001a0138.chunk.js","sourcesContent":["import PersonIcon from '@material-ui/icons/Person';\r\nimport LaptopChromebookIcon from '@material-ui/icons/LaptopChromebook';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nexport const weeks = [\r\n  {id: 1, value: \"Monday\", isChecked: false},\r\n  {id: 2, value: \"Tuesday\", isChecked: false},\r\n  {id: 3, value: \"Wednesday\", isChecked: false},\r\n  {id: 4, value: \"Thursday\", isChecked: false},\r\n  {id: 5, value: \"Friday\", isChecked: false},\r\n  {id: 6, value: \"Saturday\", isChecked: false},\r\n  {id: 0, value: \"Sunday\", isChecked: false},\r\n]\r\n\r\nexport const menuLists = [\r\n  // {\r\n  //   name: \"Students\",\r\n  //   icon: <PersonIcon />,\r\n  //   link: \"/admin/students\"\r\n  // },\r\n  {\r\n    name: \"Exams\",\r\n    icon: <LaptopChromebookIcon />,\r\n    link: \"/admin/exams\"\r\n  },\r\n  {\r\n    name: \"Tasks\",\r\n    icon: <AssignmentIcon />,\r\n    link: \"/admin/tasks\"\r\n  },\r\n  {\r\n    name: \"Task Type\",\r\n    icon: <SortIcon />,\r\n    link: \"/admin/tasktypes\"\r\n  },\r\n]\r\n\r\nexport const API_URL = '/api'\r\n\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const TASK_TYPES_REQUEST = 'TASK_TYPES_REQUEST'\r\nexport const TASK_TYPES_GET_SUCCESS = 'TASK_TYPES_GET_SUCCESS'\r\nexport const TASK_TYPES_CREATE_SUCCESS = 'TASK_TYPES_CREATE_SUCCESS'\r\nexport const TASK_TYPES_UPDATE_SUCCESS = 'TASK_TYPES_UPDATE_SUCCESS'\r\nexport const TASK_TYPES_DELETE_SUCCESS = 'TASK_TYPES_DELETE_SUCCESS'\r\nexport const TASK_TYPES_FAIL = 'TASK_TYPES_FAIL'\r\n\r\nexport const TASKS_REQUEST = 'TASKS_REQUEST'\r\nexport const TASKS_GET_SUCCESS = 'TASKS_GET_SUCCESS'\r\nexport const TASKS_CREATE_SUCCESS = 'TASKS_CREATE_SUCCESS'\r\nexport const TASKS_UPDATE_SUCCESS = 'TASKS_UPDATE_SUCCESS'\r\nexport const TASKS_DELETE_SUCCESS = 'TASKS_DELETE_SUCCESS'\r\nexport const TASKS_FAIL = 'TASKS_FAIL'\r\n\r\nexport const EXAMS_REQUEST = 'EXAMS_REQUEST'\r\nexport const EXAMS_GET_SUCCESS = 'EXAMS_SUCCESS'\r\nexport const EXAMS_CREATE_SUCCESS = 'EXAMS_CREATE_SUCCESS'\r\nexport const EXAMS_UPDATE_SUCCESS = 'EXAMS_UPDATE_SUCCESS'\r\nexport const EXAMS_DELETE_SUCCESS = 'EXAMS_DELETE_SUCCESS'\r\nexport const EXAMS_FAIL = 'EXAMS_FAIL'\r\n\r\nexport const SCHEDULE_REQUEST = 'SCHEDULE_REQUEST'\r\nexport const SCHEDULE_SET_SUCCESS = 'SCHEDULE_SET_SUCCESS'\r\nexport const SCHEDULE_GET_SUCCESS = 'SCHEDULE_GET_SUCCESS'\r\nexport const SCHEDULE_FAIL = 'SCHEDULE_FAIL'\r\n\r\nexport const USER_SETTING_SAVE_REQUEST = \"USER_SETTING_SAVE_REQUEST\"\r\nexport const USER_SETTING_GET_REQUEST = \"USER_SETTING_GET_REQUEST\"\r\n\r\nexport const messageActionTypes = {\r\n  SET_MESSAGE      : 'SET_MESSAGE',\r\n  CLEAR_MESSAGE    : 'CLEAR_MESSAGE'\r\n}","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  messageActionTypes\r\n} from '../helper/constants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n     \r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: messageActionTypes.SET_MESSAGE,\r\n      payload: {\r\n        message: 'Successfully Signed In',\r\n        success: true\r\n      }\r\n    })\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: messageActionTypes.SET_MESSAGE,\r\n      payload:\r\n        { message: error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n        success: false}\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  dispatch({ type: USER_LOGOUT })\r\n  document.location.href = '/signin'\r\n}","import axios from 'axios'\r\n\r\nimport {\r\n  API_URL,\r\n  TASK_TYPES_FAIL,\r\n  TASK_TYPES_REQUEST,\r\n  TASK_TYPES_GET_SUCCESS,\r\n  TASK_TYPES_CREATE_SUCCESS,\r\n  TASK_TYPES_UPDATE_SUCCESS,\r\n  TASK_TYPES_DELETE_SUCCESS\r\n} from '../helper/constants'\r\n\r\nimport { logout } from './userActions'\r\n\r\nconst getTasktypes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASK_TYPES_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`${API_URL}/tasktypes`, config)\r\n\r\n    dispatch({\r\n      type: TASK_TYPES_GET_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASK_TYPES_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst addTasktypes = (tasktype) => async (dispatch, getState) => {\r\n  console.log(tasktype)\r\n  try {\r\n    dispatch({\r\n      type: TASK_TYPES_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`${API_URL}/tasktypes/create`,  tasktype, config)\r\n\r\n    dispatch({\r\n      type: TASK_TYPES_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASK_TYPES_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst updateTasktypes = (tasktype) => async (dispatch, getState) => {\r\n  console.log(tasktype);\r\n  try {\r\n    dispatch({\r\n      type: TASK_TYPES_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`${API_URL}/tasktypes/${tasktype._id}`, tasktype, config)\r\n\r\n    dispatch({\r\n      type: TASK_TYPES_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASK_TYPES_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst deleteTasktypes = (lists) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASK_TYPES_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    console.log(userInfo.token)\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      data: {\r\n        id: lists\r\n      }\r\n    }\r\n    console.log(config)\r\n\r\n    await axios.delete(`${API_URL}/tasktypes/`, config)\r\n\r\n    dispatch({\r\n      type: TASK_TYPES_DELETE_SUCCESS,\r\n      payload: lists\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASK_TYPES_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const tasktypeActions = {\r\n  getTasktypes,\r\n  addTasktypes,\r\n  updateTasktypes,\r\n  deleteTasktypes\r\n}","import axios from 'axios'\r\n\r\nimport {\r\n  API_URL,\r\n  TASKS_REQUEST,\r\n  TASKS_GET_SUCCESS,\r\n  TASKS_CREATE_SUCCESS,\r\n  TASKS_UPDATE_SUCCESS,\r\n  TASKS_DELETE_SUCCESS,\r\n  TASKS_FAIL\r\n} from '../helper/constants'\r\n\r\nimport { logout } from './userActions'\r\n\r\nconst getTasks = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASKS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`${API_URL}/tasks`, config)\r\n    dispatch({\r\n      type: TASKS_GET_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASKS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst addTasks = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASKS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`${API_URL}/tasks/create`, task, config)\r\n\r\n    dispatch({\r\n      type: TASKS_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASKS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst updateTasks = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASKS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`${API_URL}/tasks/${task._id}`, task, config)\r\n\r\n    dispatch({\r\n      type: TASKS_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASKS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst deleteTasks = (lists) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: TASKS_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      data : {\r\n        id: lists\r\n      }\r\n    }\r\n\r\n    await axios.delete(`${API_URL}/tasks`, config)\r\n\r\n    dispatch({\r\n      type: TASKS_DELETE_SUCCESS,\r\n      payload: lists\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: TASKS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const taskActions = {\r\n  getTasks,\r\n  addTasks,\r\n  updateTasks,\r\n  deleteTasks\r\n}","import axios from 'axios'\r\n\r\nimport {\r\n  API_URL,\r\n  EXAMS_FAIL,\r\n  EXAMS_REQUEST,\r\n  EXAMS_GET_SUCCESS,\r\n  EXAMS_CREATE_SUCCESS,\r\n  EXAMS_UPDATE_SUCCESS,\r\n  EXAMS_DELETE_SUCCESS\r\n} from '../helper/constants'\r\n\r\nimport { logout } from './userActions'\r\n\r\nconst getExams = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: EXAMS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n\r\n    const { data } = await axios.get(`${API_URL}/exams`)\r\n\r\n    dispatch({\r\n      type: EXAMS_GET_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: EXAMS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst addExam = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: EXAMS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`${API_URL}/exams/create`, task, config)\r\n\r\n    dispatch({\r\n      type: EXAMS_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: EXAMS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nconst updateExam = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: EXAMS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`${API_URL}/exams/${task._id}`, task, config)\r\n\r\n    dispatch({\r\n      type: EXAMS_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: EXAMS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nconst deleteExams = (lists) => async (dispatch, getState) => {\r\n  console.log('called', lists)\r\n  try {\r\n    dispatch({\r\n      type: EXAMS_REQUEST\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      data : {\r\n        id: lists\r\n      }\r\n    }\r\n\r\n    await axios.delete(`${API_URL}/exams`, config)\r\n\r\n    dispatch({\r\n      type: EXAMS_DELETE_SUCCESS,\r\n      payload: lists\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: EXAMS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const examsAction = {\r\n  getExams,\r\n  addExam,\r\n  updateExam,\r\n  deleteExams,\r\n}","import React, { useCallback, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { menuLists } from '../../helper/constants'\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { logout } from '../../actions/userActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { tasktypeActions } from '../../actions/tasktypeAction';\r\nimport { taskActions } from '../../actions/taskAction';\r\nimport { examsAction } from '../../actions/examsAction';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      zIndex: 1201\r\n    },\r\n    display: 'flex',\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  sidebar: {\r\n    paddingTop: 25\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  userIcon: {\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst AdminDashboard = ({window}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  // const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const handleGotoLink = useCallback((link) => {\r\n    handleClose();\r\n    navigate(link)\r\n  }, [navigate])\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(tasktypeActions.getTasktypes())\r\n    dispatch(taskActions.getTasks())\r\n    dispatch(examsAction.getExams())\r\n  }, [dispatch])\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List className={classes.sidebar}>\r\n        {menuLists.map((list, index) => (\r\n          <ListItem button key={list.name} onClick={() => handleGotoLink(list.link)}>\r\n            <ListItemIcon>{list.icon}</ListItemIcon>\r\n            <ListItemText primary={list.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <div className=\"app-sidebar-logo\">\r\n            <a href=\"/\">\r\n              <img src=\"https://securitiesce.com/media/securitiesce_logo.png\" alt=\"\"/>\r\n            </a>\r\n          </div>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Admin Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n        <div>\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <PersonIcon className={classes.userIcon} />\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            {/* <MenuItem onClick={handleClose}>St</MenuItem>\r\n            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem> */}\r\n            {menuLists.map((list, index) => (\r\n              <MenuItem button key={list.name} onClick={() => handleGotoLink(list.link)}>\r\n                {list.name}\r\n              </MenuItem>\r\n            ))}\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Outlet />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nAdminDashboard.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default AdminDashboard\r\n\r\n\r\n","import React, { useMemo } from 'react';\r\nimport {\r\n    TableHead,\r\n    TableRow,\r\n    Checkbox,\r\n    TableCell,\r\n    TableSortLabel\r\n} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\n/**\r\n * format the table header\r\n */\r\nconst labelName = {\r\n  taskType: 'Task Type',\r\n  action: 'Edit',\r\n  name: 'Name',\r\n  spinTime: 'Spin Time',\r\n  time: 'Time',\r\n  chapterNum: 'Video Number',\r\n  videos: 'Related Videos'\r\n};\r\n\r\nconst EnhancedTableHead = (props) => {\r\n  const { \r\n    classes, \r\n    onSelectAllClick, \r\n    order, \r\n    orderBy, \r\n    numSelected, \r\n    rows, \r\n    onRequestSort,\r\n    tabValue\r\n  } = props;\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  if(tabValue !== undefined) {\r\n    if(taskTypes[tabValue].name.includes('Read')) {\r\n      labelName.spinTime = 'Number of Pages'\r\n      labelName.chapterNum = 'Chapter Number'\r\n    } else {\r\n      labelName.spinTime = 'Spin Time'\r\n      labelName.chapterNum = 'Video Number'\r\n    }\r\n  }\r\n\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const headcells = useMemo(() => {\r\n    let head = []; \r\n    for(let key in rows[0]) {\r\n      if(key === '_id' || key === '__v' || key === 'tasks' || key === 'videos') continue\r\n      if ( (tabValue === 1) && (key === 'spinTime' || key === \"time\" || key === \"chapterNum\")) continue\r\n      head.push({\r\n        id: key,\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: labelName[key]\r\n      })\r\n    }\r\n    return [{id: 'number', numeric: false, disablePadding: true, label: 'No'}, ...head]\r\n  }, [rows])\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n                indeterminate={numSelected > 0 && numSelected < rows.length}\r\n                checked={rows.length > 0 && numSelected === rows.length}\r\n                onChange={onSelectAllClick}\r\n                inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n        </TableCell>\r\n        {headcells.map((headCell) => (\r\n            <TableCell\r\n                key={headCell.id}\r\n                align='center'\r\n                padding={headCell.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                  active={orderBy === headCell.id}\r\n                  direction={orderBy === headCell.id ? order : 'asc'}\r\n                  onClick={createSortHandler(headCell.id)}\r\n              >\r\n                  {headCell.label}\r\n                  {orderBy === headCell.id ? (\r\n                      <span className={classes.visuallyHidden}>\r\n                          {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                      </span>\r\n                      ) : null\r\n                  }\r\n              </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n        </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default EnhancedTableHead;","import React from 'react';\r\nimport { \r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Slide\r\n} from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ConfirmModal({open, setOpen, deleteFn}) {\r\n    /**\r\n     * delete confirm function\r\n     */\r\n    const confirm = () => {\r\n        //When the user confirms to delete the links, the actual delete method triggers\r\n        // and then the modal fades\r\n        deleteFn();\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Do you really want to delete the links?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={confirm} color=\"primary\" variant=\"contained\">\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useCallback, useMemo} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Toolbar,\r\n    Typography,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { tasktypeActions } from '../../actions/tasktypeAction';\r\nimport ConfirmModal from '../ConfirmModal';\r\nimport { taskActions } from '../../actions/taskAction';\r\nimport { examsAction } from '../../actions/examsAction';\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    }\r\n}));\r\n  \r\nconst EnhancedTableToolbar = (props) => {\r\n    //creat the classes of the toolbar\r\n    const classes = useToolbarStyles();\r\n    //the current selected lists: array of the selected lists'id\r\n    const { numSelected, setSelected, pageIndex, tabValue, setTasks, setIsloading } = props;\r\n    //the boolean to control the on and off state of the confirm modal\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    /**\r\n     * when the delete button is clicked, it dipatches delete action to the reducer.\r\n     */\r\n    const deleteFn = useCallback(\r\n        () => {\r\n            if(pageIndex === \"2\") {\r\n              dispatch(tasktypeActions.deleteTasktypes(numSelected))\r\n            }\r\n            if(pageIndex === \"1\") {\r\n              dispatch(taskActions.deleteTasks(numSelected))\r\n            }\r\n            if(pageIndex === \"0\") {\r\n              dispatch(examsAction.deleteExams(numSelected))\r\n            }\r\n            if(tabValue !== undefined) {\r\n                setTasks(state => {\r\n                    return state.filter(state => !numSelected.includes(state._id))\r\n                })\r\n                setIsloading(false)\r\n                \r\n            }\r\n        },\r\n        [numSelected, dispatch, pageIndex, tabValue, setTasks, setIsloading],\r\n    )\r\n\r\n    const title = useMemo(() => {\r\n        if(pageIndex === '0') return 'Exams'\r\n        if(pageIndex === '1') return 'Tasks'\r\n        if(pageIndex === '2') return 'Task Types'\r\n    }, [pageIndex])\r\n    \r\n    //to open the confirm modal to ask the user's confirmation on the delete action.\r\n    const handleDelete = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <>\r\n            <Toolbar\r\n                className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected.length > 0,\r\n                })}\r\n            >\r\n                {numSelected.length > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected.length} selected\r\n                </Typography>\r\n                ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    {title}\r\n                </Typography>\r\n                )}\r\n        \r\n                {numSelected.length > 0 ? (\r\n                  // <Tooltip>\r\n                    <IconButton aria-label=\"deleted\" onClick={handleDelete}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  // </Tooltip>\r\n                ) : (\r\n                  // <Tooltip>\r\n                    <IconButton aria-label=\"filter list\">\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                  // </Tooltip>\r\n                )}\r\n            </Toolbar>\r\n            <ConfirmModal \r\n                open={ open }\r\n                setOpen={ setOpen }\r\n                deleteFn={ deleteFn }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EnhancedTableToolbar;","import React, { useCallback, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  Paper,\r\n  IconButton,\r\n  TableRow,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EnhancedTableHead from './EnhancedTableHead';\r\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\n/**\r\n * \r\n * @param {object} a  \r\n * @param {object} b \r\n * @param {string} orderBy \r\n * a, b: the subsequent objects of the certain array to be sorted\r\n * orderBy: the item by which an array is going to be sorted\r\n */\r\nconst descendingComparator = (a, b, orderBy) => {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/**\r\n * \r\n * @param {array} feedData the array of the given links\r\n * @param {fn} onUpdateClick update callback to be passed to the link table\r\n */\r\nconst createData = (feedData, onUpdateClick) => {\r\n  if (feedData && feedData.length > 0 && feedData[0].chapterNum) {\r\n    feedData.sort((a, b) => a.chapterNum - b.chapterNum)\r\n  }\r\n  return feedData && feedData.map((type) => {\r\n    //action part is an icon for an update\r\n    return {\r\n      ...type,\r\n      action: <IconButton onClick={() => onUpdateClick(type._id)}>\r\n        <EditIcon />\r\n      </IconButton>\r\n    }\r\n  })\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} order \r\n * @param {string} orderBy \r\n * to return a callback to sort the data\r\n */\r\nconst getComparator = (order, orderBy) => {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nconst stableSort = (array, comparator) => {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    '& .link-url': {\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n        textDecoration: 'underline'\r\n      }\r\n    }\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1\r\n  },\r\n}));\r\n\r\nconst EnhancedTable = ({ setOpen, setIsAdd, feedData, pageIndex, tabValue, setTasks, setIsloading }) => {\r\n  const navigate = useNavigate()\r\n  /**\r\n   * \r\n   * @param {number} id\r\n   * when the user clicks the update button, it triggers the update modal. \r\n   */\r\n  const onUpdateClick = useCallback((id) => {\r\n    if (pageIndex === '0') {\r\n      navigate(`/admin/exams/edit `, { state: { id: id } })\r\n    } else {\r\n      setIsAdd({ isAdd: false, id: id });\r\n      setOpen(true);\r\n    }\r\n  }, [setIsAdd, setOpen, pageIndex, navigate])\r\n\r\n  const classes = useStyles();\r\n  /**\r\n   * get the currnet links state and dispatch function from the redux store\r\n   */\r\n\r\n  // const dispatch = useDispatch();\r\n  /**\r\n   * create the data for the data table from the current links data\r\n   */\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  let filteredTaskTypes = taskTypes.filter( (item, idx) => (idx !== 1) )\r\n  // console.log(\"taskTypes: \", filteredTaskTypes, feedData, tabValue)\r\n  if (tabValue !== undefined) {\r\n    feedData = feedData.filter(data => data.taskType === filteredTaskTypes[tabValue]._id)\r\n  }\r\n  const rows = useMemo(() => createData(feedData, onUpdateClick), [feedData, onUpdateClick]);\r\n\r\n  const getTasktypeName = useCallback((id) => {\r\n    const seletedType = filteredTaskTypes.filter(type => type._id === id)\r\n    return seletedType[0] && seletedType[0].name\r\n  }, [filteredTaskTypes])\r\n  /**\r\n   * set the initial order type(as an initail, descending type)\r\n   * \r\n   */\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState('count');\r\n  /**\r\n   * the array of selected link's id\r\n   */\r\n  const [selected, setSelected] = React.useState([]);\r\n  /**\r\n   * \r\n   * @param {*} property \r\n   */\r\n  const handleRequestSort = (property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  /**\r\n   * \r\n   * @param {javascript event} event \r\n   * callback to control the state when all the links are selected\r\n   */\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n._id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n  /**\r\n   * \r\n   * @param {id} id\r\n   * when the user checks the links, its index is included in the selected arrray. \r\n   */\r\n  const handleClick = (id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {\r\n        rows.length > 0 &&\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar numSelected={selected} setSelected={setSelected} pageIndex={pageIndex} setTasks={setTasks} tabValue={tabValue} setIsloading={setIsloading} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rows={rows}\r\n                tabValue={tabValue}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row._id + '_' + index}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          padding=\"checkbox\"\r\n                          onClick={(event) => handleClick(row._id)}\r\n                        >\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{index + 1}</TableCell>\r\n                        {\r\n                          Object.entries(row).map(item => {\r\n                            if (item[0] === '_id' || item[0] === '__v' || item[0] === 'tasks' || item[0] === 'videos') return null\r\n                            if ( tabValue === 1 && (item[0] === 'spinTime' || item[0] === 'time' || item[0] === 'chapterNum')) return null\r\n                            if (item[0] === 'taskType') {\r\n                              return (\r\n                                <TableCell align=\"center\" key={item[0]}>{getTasktypeName(item[1])}</TableCell>\r\n                              )\r\n                            } else if (item[0] === 'chapterNum' && (filteredTaskTypes[tabValue].name !== \"Test Assignment\")) {\r\n                              return (\r\n                                <TableCell align=\"center\" key={item[0]}>{filteredTaskTypes[tabValue].name.includes('video') ? `Video ${item[1]}` : `Chapter ${item[1]}`}</TableCell>\r\n                              )\r\n                            } else {\r\n                              return (\r\n                                <TableCell align=\"center\" key={item[0]}>{item[1]}</TableCell>\r\n                              )\r\n                            }\r\n                          })\r\n                        }\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnhancedTable;","import React, { useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    TextField,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl\r\n} from '@material-ui/core';\r\nimport { tasktypeActions } from '../../actions/tasktypeAction';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .content-wrapper' : {\r\n            minHeight: '100px',\r\n        }\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: '70%'\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 200,\r\n    },\r\n    validatorForm: {\r\n        width: '100%'\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst modalDescription = ['exam', 'task', 'task type'];\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nconst EditModal = ({open, setOpen, isAdd: flag, feedData, pageIndex}) => {\r\n    /**\r\n     * isAdd is a boolean that decides whether this modal is for update and add\r\n     * if isAdd is boolean, it is an add modal\r\n     * id: when it is an update modal, id is the id of the link to be updated\r\n     */\r\n    const { isAdd, id } = flag;\r\n    const classes = useStyles();\r\n    /**\r\n     * Initailize the states\r\n     */\r\n    let initData = ''\r\n    \r\n    /**\r\n     * When it is an update modal, the initial states for link, comment and tags should be\r\n     * the ones of the link to be updated\r\n     */\r\n    if(!isAdd) {\r\n        initData = feedData[feedData.findIndex(datum => datum._id === id)].name;\r\n    }\r\n    //set the initial states of name\r\n    const [data, setData] = useState(initData);\r\n    // const [comment, setComment] = useState(initComment);\r\n    // const { tags } = useSelector(state => state.tags);\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     * callbacks to monitor the change of the links, comment and tags\r\n     */\r\n    const onChangeData = useCallback(\r\n        (e) => {\r\n            setData(e.target.value);\r\n        },\r\n        [],\r\n    );\r\n\r\n    /**\r\n     * callback to control on and off state of the modal\r\n     */\r\n    const handleClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, [setOpen]);\r\n\r\n    /**\r\n     * callback to handle the adding or updating\r\n     */\r\n    const handleSubmit = useCallback(\r\n        (e) => {\r\n            console.log('called')\r\n            e.preventDefault();\r\n            if(!data) return;\r\n            if(isAdd) {\r\n                //Add a new link\r\n                dispatch(tasktypeActions.addTasktypes({name: data}));\r\n            } else {\r\n                //update the selected link\r\n                dispatch(tasktypeActions.updateTasktypes({_id: id, name : data}));\r\n            }\r\n            handleClose();\r\n        },\r\n        [data, dispatch, handleClose, id, isAdd],\r\n    );\r\n\r\n    /**\r\n     * title and subheader of the edit modal.\r\n     */\r\n    const title = isAdd ? `Add ${modalDescription[Number(pageIndex)]}` : `Update ${modalDescription[Number(pageIndex)]}`;\r\n    const subheader = isAdd ? `You can submit your new ${modalDescription[Number(pageIndex)]}.` : `You can update your ${modalDescription[Number(pageIndex)]}.`\r\n    \r\n\r\n    return (\r\n        <div >\r\n            <Dialog\r\n                fullWidth={true}\r\n                open={open}\r\n                onClose={handleClose}\r\n                className={classes.root}\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n                    <DialogContent className=\"content-wrapper\">\r\n                        <DialogContentText className=\"subheader\">\r\n                            {subheader}\r\n                        </DialogContentText>\r\n                        <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n                          <FormControl className={classes.formControl}>\r\n                              <TextValidator \r\n                                  label={modalDescription[Number(pageIndex)]}\r\n                                  name={modalDescription[Number(pageIndex)]}\r\n                                  variant=\"outlined\"\r\n                                  value={data}\r\n                                  className={classes.validatorForm}\r\n                                  onChange={onChangeData}\r\n                                  validators={['required']}\r\n                                  errorMessages={['This field is required']}\r\n                              />\r\n                          </FormControl>\r\n                        </ValidatorForm>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditModal;\r\n","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport uuid from 'react-uuid'\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { taskActions } from '../../actions/taskAction';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .content-wrapper': {\r\n      minHeight: '100px',\r\n    }\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: '70%'\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 200,\r\n  },\r\n  validatorForm: {\r\n    width: '100%'\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nconst EditExamModal = ({ open, setOpen, isAdd: flag, feedData, tabValue, setTasks, setIsloading }) => {\r\n  /**\r\n   * isAdd is a boolean that decides whether this modal is for update and add\r\n   * if isAdd is boolean, it is an add modal\r\n   * id: when it is an update modal, id is the id of the link to be updated\r\n   */\r\n  const { isAdd, id } = flag;\r\n  const classes = useStyles();\r\n  /**\r\n   * Initailize the states\r\n   */\r\n  let initTaskname = ''\r\n  let initSpintime = ''\r\n  let initTime = ''\r\n  let initChapterNum = ''\r\n  let initvideoTaskId = ''\r\n  let initVideos = [];\r\n\r\n  /**\r\n   * initialize the default value and option values for multiselect\r\n   */\r\n  let defaultVideos = [];\r\n  let optionVideos = [];\r\n\r\n  /**\r\n   * When it is an update modal, the initial states for link, comment and tags should be\r\n   * the ones of the link to be updated\r\n   */\r\n  const { tasks } = useSelector(state => state.tasks)\r\n  if (!isAdd) {\r\n    initTaskname = feedData[feedData.findIndex(datum => datum._id === id)].name;\r\n    initSpintime = feedData[feedData.findIndex(datum => datum._id === id)].spinTime;\r\n    initTime = feedData[feedData.findIndex(datum => datum._id === id)].time;\r\n    initChapterNum = feedData[feedData.findIndex(datum => datum._id === id)].chapterNum;\r\n    initvideoTaskId = tasks[tasks.findIndex(task => task.name === initTaskname)] && tasks[tasks.findIndex(task => task.name === initTaskname)]._id;\r\n    initVideos = feedData[feedData.findIndex(datum => datum._id === id)].videos;\r\n  }\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  let filteredTaskTypes = taskTypes.filter( (item, idx) => (idx !== 1))\r\n  //set the initial states of name\r\n  const [taskName, setTaskname] = useState(initTaskname);\r\n  const [videoTaskId, setVideoTaskId] = useState(initvideoTaskId);\r\n  const [chapterNum, setChapterNum] = useState(initChapterNum);\r\n  const [spinTime, setSpintime] = useState(initSpintime);\r\n  const [time, setTime] = useState(initTime);\r\n  const [taskTypeId, setTasktypeId] = useState(filteredTaskTypes[tabValue]._id);\r\n  const [taskTypeName, setTasktypename] = useState(filteredTaskTypes[tabValue].name);\r\n  const [selectedVideos, setSelectedVideos] = useState(initVideos);\r\n\r\n  optionVideos = useMemo(() => {\r\n    return tasks && tasks.map(task => ({\r\n      value: task._id,\r\n      label: task.name\r\n    }))\r\n  }, [tasks]);\r\n\r\n  const getVideoName = useCallback((value) => {\r\n    const selectedTask = tasks.filter(task => task._id === value)\r\n    return selectedTask[0] && selectedTask[0].name\r\n  }, [tasks])\r\n  /**\r\n   * when it is an update modal, the selected link's tags should be provided as a default\r\n   * tags for the multiselect\r\n   */\r\n  defaultVideos = useMemo(() => {\r\n    return selectedVideos && selectedVideos.map(video => ({\r\n      value: video.value ? video.value : video,\r\n      label: getVideoName(video.value ? video.value : video)\r\n    }))\r\n  }, [selectedVideos, getVideoName]);\r\n  /**\r\n   * callbacks to monitor the change of the links, comment and tags\r\n   */\r\n  const onChangeTaskname = useCallback(\r\n    (e) => {\r\n      setTaskname(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeTask = useCallback(\r\n    (e) => {\r\n      setVideoTaskId(e.target.value);\r\n      const selectedTask = tasks.filter(task => task._id === e.target.value)\r\n      setTaskname(selectedTask[0].name)\r\n      setSpintime(selectedTask[0].spinTime)\r\n      setTime(selectedTask[0].time)\r\n    },\r\n    [tasks],\r\n  );\r\n  const onChangeChapterNum = useCallback(\r\n    (e) => {\r\n      setChapterNum(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeSpintime = useCallback(\r\n    (e) => {\r\n      setSpintime(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeTime = useCallback(\r\n    (e) => {\r\n      setTime(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeTasktype = useCallback(\r\n    (e) => {\r\n      setTasktypeId(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onChangeVideoSetting = useCallback((selectedVideos) => {\r\n    setSelectedVideos(selectedVideos)\r\n  }, [])\r\n\r\n  /**\r\n   * callback to control on and off state of the modal\r\n   */\r\n  const handleClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, [setOpen]);\r\n\r\n  /**\r\n   * callback to handle the adding or updating\r\n   */\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      let connectedVideos = [];\r\n      //tags to be added or updated for a certain link\r\n      connectedVideos = selectedVideos && selectedVideos.map(video => {\r\n        return video.value\r\n      })\r\n      console.log(taskName)\r\n      if (!taskName) return;\r\n      if ((taskTypeName === \"Test Assignment\" ) || (spinTime && time))\r\n        if (isAdd) {\r\n          //Add a new link\r\n          setTasks(state => [...state, { name: taskName, spinTime, chapterNum, time, taskType: taskTypeId, videos: connectedVideos }])\r\n          setIsloading(false)\r\n          // dispatch(taskActions.addTasks({name: taskName, spinTime, chapterNum, time, taskType: taskTypeId}));\r\n        } else {\r\n          //update the selected link\r\n          setIsloading(false)\r\n          setTasks(state => {\r\n            const newState = [...state];\r\n            const index = newState.findIndex(state => state._id === id)\r\n            newState[index].name = taskName\r\n            newState[index].spinTime = spinTime\r\n            newState[index].chapterNum = chapterNum\r\n            newState[index].time = time\r\n            newState[index].taskType = taskTypeId\r\n            newState[index].videos = connectedVideos\r\n            return newState\r\n          })\r\n        }\r\n      handleClose();\r\n    },\r\n    [handleClose, id, isAdd, spinTime, time, taskTypeId, setIsloading, taskName, chapterNum, setTasks, selectedVideos],\r\n  );\r\n\r\n  /**\r\n   * title and subheader of the edit modal.\r\n   */\r\n  const title = 'Add Task';\r\n  const subheader = isAdd ? `You can submit your new task` : `You can update your task.`\r\n\r\n  return (\r\n    <div >\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent className=\"content-wrapper\">\r\n          <DialogContentText className=\"subheader\">\r\n            {subheader}\r\n          </DialogContentText>\r\n          <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Task Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={taskTypeId}\r\n                onChange={onChangeTasktype}\r\n                label=\"Task Type\"\r\n              >\r\n                {filteredTaskTypes.map(taskType => (\r\n                  <MenuItem disabled value={taskType._id} key={taskType._id}>{taskType.name}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextValidator\r\n                label={taskTypeName.includes('video') ? 'Video Number' : ((tabValue === 1) ? 'Test Number' : 'Chapter Number') }\r\n                name={taskTypeName.includes('video') ? 'Video Number' : ((tabValue === 1) ? 'Test Number' : 'Chapter Number')}\r\n                variant=\"outlined\"\r\n                value={chapterNum}\r\n                className={classes.validatorForm}\r\n                onChange={onChangeChapterNum}\r\n                validators={['required', 'isNumber']}\r\n                errorMessages={['This field is required', 'Number is required']}\r\n              />\r\n            </FormControl>\r\n            {taskTypeName.includes('video') ? (\r\n              <>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">Video Content</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={videoTaskId}\r\n                    onChange={onChangeTask}\r\n                    label=\"Video Content\"\r\n                  >\r\n                    {tasks.map(task => (\r\n                      <MenuItem value={task._id} key={task._id}>{task.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    label=\"Task Name\"\r\n                    name=\"Task Name\"\r\n                    variant=\"outlined\"\r\n                    value={taskName}\r\n                    onChange={onChangeTaskname}\r\n                    required\r\n                  />\r\n                </FormControl>\r\n                {(tabValue !== 1) &&  <><FormControl className={classes.formControl}>\r\n                  <TextValidator\r\n                    label={taskTypeName.includes('video') ? 'Video Spin Time' : 'Number of Pages'}\r\n                    name={taskTypeName.includes('video') ? 'Video Spin Time' : 'Number of Pages'}\r\n                    variant=\"outlined\"\r\n                    value={spinTime}\r\n                    disabled={taskTypeName === \"Test Assignment\" ? true : false}\r\n                    className={classes.validatorForm}\r\n                    onChange={onChangeSpintime}\r\n                    validators={['required', 'isNumber']}\r\n                    errorMessages={['This field is required', 'Number is required']}\r\n                  />\r\n                </FormControl>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextValidator\r\n                    label=\"Time\"\r\n                    name=\"Time\"\r\n                    variant=\"outlined\"\r\n                    value={time}\r\n                    disabled={taskTypeName === \"Test Assignment\" ? true : false}\r\n                    className={classes.validatorForm}\r\n                    onChange={onChangeTime}\r\n                    validators={['required', 'isNumber']}\r\n                    errorMessages={['This field is required', 'Number is required']}\r\n                  />\r\n                </FormControl> </>}\r\n                <FormControl className={classes.formControl}>\r\n                  <CreatableSelect\r\n                    isMulti\r\n                    onChange={onChangeVideoSetting}\r\n                    options={optionVideos}\r\n                    defaultValue={defaultVideos}\r\n                  />\r\n                </FormControl>\r\n              </>\r\n            )}\r\n          </ValidatorForm>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n            {isAdd ? 'Add' : 'Edit'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditExamModal;\r\n","import { Button, FormControl, TextField, Typography, Grid, useTheme } from '@material-ui/core';\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { examsAction } from '../../actions/examsAction';\r\nimport EnhancedTable from '../../components/dataTable/EnhancedTable';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport EditModal from '../../components/modals/EditModal';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport EditExamModal from '../../components/modals/EditExamModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  title : {\r\n    fontSize: '1.25em'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '20px 0',\r\n    // width: '100%', \r\n  },\r\n  examName : {\r\n    width: '30%'\r\n  },\r\n  submitBtn : {\r\n    maxWidth: '150px',\r\n    alignSelf: 'flex-end'\r\n  },\r\n  tabPanel: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    marginTop: '15px',\r\n    // backgroundColor: theme.palette.background.paper,\r\n  }\r\n}))\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nconst ExamEditPage = () => {\r\n  const { state } = useLocation()\r\n  const navigate= useNavigate()\r\n  const classes = useStyles()\r\n  const theme = useTheme();\r\n  const { exams } = useSelector(state => state.exams)\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  const dispatch = useDispatch()\r\n  \r\n  const selectedExam = useMemo(() => {\r\n    if(!state) return null\r\n    const exam_ =  exams.filter(exam => exam._id === state.id)\r\n    return exam_[0]\r\n  }, [state, exams])\r\n\r\n  const [ examName, setExamname] = useState(selectedExam ? selectedExam.name : '')\r\n  const [ tasks, setTasks] = useState(selectedExam ? selectedExam.tasks : [])\r\n\r\n  const title = useMemo(() => {\r\n    if(!state) return 'Add Exam'\r\n    return 'Edit Exam'\r\n  }, [state])\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isLoading, setIsloading] = React.useState(true);\r\n  //create the flag which decides the modal type of Add or update modal.\r\n  const [isAdd, setIsAdd] = React.useState({isAdd: true});\r\n\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setTabValue(index);\r\n  };\r\n\r\n  //get the current link lists from the store\r\n  \r\n  const handleClickOpen = () => {\r\n    setIsAdd({isAdd: true});\r\n    setOpen(true);\r\n  };\r\n\r\n  const onChangeExamName = useCallback((e) => {\r\n    setExamname(e.target.value)\r\n    setIsloading(false)\r\n  }, [])\r\n\r\n  const handleSave = useCallback((e) => {\r\n    e.preventDefault()\r\n    if(!state) {\r\n      dispatch(examsAction.addExam({name: examName, tasks: tasks}))\r\n      navigate('/admin/exams')\r\n      setIsloading(true)\r\n    } else {\r\n      dispatch(examsAction.updateExam({_id: state.id, name: examName, tasks: tasks}))\r\n      setIsloading(true)\r\n    }\r\n  }, [dispatch, examName, tasks, state, navigate])\r\n\r\n  return (\r\n    <>\r\n      <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n        {title}\r\n      </Typography>\r\n      <form className={classes.form}>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField \r\n              label=\"Exam name\"\r\n              name=\"Exam name\"\r\n              variant=\"outlined\"\r\n              value={examName}\r\n              className={classes.examName}\r\n              onChange={onChangeExamName}\r\n              required\r\n          />\r\n        </FormControl>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <Button \r\n              variant=\"contained\" \r\n              color=\"secondary\"\r\n              onClick={handleClickOpen}\r\n          >\r\n            Add Task\r\n          </Button>\r\n          <Grid item sm={12} md={12} className={classes.tabPanel}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n              <Tabs\r\n                value={tabValue}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                aria-label=\"scrollable auto tabs example\"\r\n              >\r\n                {\r\n                  taskTypes.filter((item, idx) => (idx !== 1)).map((type, index) => (\r\n                    <Tab label={type.name} {...a11yProps(index)} key={type._id}/>\r\n                  ))\r\n                }\r\n              </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n              axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n              index={tabValue}\r\n              onChangeIndex={handleChangeIndex}\r\n            >\r\n              {\r\n                taskTypes.filter((item, idx) => (idx !== 1)).map((type, index) => (\r\n                  <TabPanel value={tabValue} index={index} key={type._id}>\r\n                    <EnhancedTable \r\n                      feedData={tasks} \r\n                      setOpen={setOpen} \r\n                      setIsAdd={setIsAdd} \r\n                      tabValue={tabValue} \r\n                      setTasks={setTasks} \r\n                      setIsloading={setIsloading}/>\r\n                  </TabPanel>\r\n                ))\r\n              }\r\n            </SwipeableViews>\r\n          </Grid>\r\n        </Grid>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleSave} className={classes.submitBtn} disabled={isLoading}>\r\n            Save\r\n        </Button>\r\n      </form>\r\n      {\r\n        open &&\r\n        <EditExamModal feedData={tasks} open={open} setOpen={setOpen} isAdd={isAdd} tabValue={tabValue} setTasks={setTasks} setIsloading={setIsloading}/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExamEditPage;","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport EnhancedTable from '../../components/dataTable/EnhancedTable';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      display: 'flex',\r\n      marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst ExamsPage = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  //create the open flag state and setState function to control the edit modal\r\n\r\n  //get the current link lists from the store\r\n  const { exams } = useSelector(state => state.exams);\r\n  const handleClickOpen = useCallback(() => {\r\n    navigate('/admin/exams/edit')\r\n  }, [navigate]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n      >\r\n          <Button \r\n              variant=\"contained\" \r\n              color=\"secondary\"\r\n              onClick={handleClickOpen}\r\n          >\r\n              Add Exam\r\n          </Button>\r\n          <Grid item sm={12} md={12}>\r\n            <EnhancedTable feedData={exams} pageIndex=\"0\"/>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExamsPage;","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl\r\n} from '@material-ui/core';\r\nimport { tasktypeActions } from '../../actions/tasktypeAction';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { taskActions } from '../../actions/taskAction';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .content-wrapper': {\r\n      minHeight: '100px',\r\n    }\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: '70%'\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 200,\r\n  },\r\n  validatorForm: {\r\n    width: '100%'\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst modalDescription = ['exam', 'task', 'task type'];\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n */\r\nconst EdittaskModal = ({ open, setOpen, isAdd: flag, feedData, pageIndex }) => {\r\n  /**\r\n   * isAdd is a boolean that decides whether this modal is for update and add\r\n   * if isAdd is boolean, it is an add modal\r\n   * id: when it is an update modal, id is the id of the link to be updated\r\n   */\r\n  const { isAdd, id } = flag;\r\n  const classes = useStyles();\r\n  /**\r\n   * Initailize the states\r\n   */\r\n  let initTaskname = ''\r\n  let initSpintime = ''\r\n  let initTime = ''\r\n  let initTasktype_id = ''\r\n\r\n  /**\r\n   * When it is an update modal, the initial states for link, comment and tags should be\r\n   * the ones of the link to be updated\r\n   */\r\n  if (!isAdd) {\r\n    initTaskname = feedData[feedData.findIndex(datum => datum._id === id)].name;\r\n    initSpintime = feedData[feedData.findIndex(datum => datum._id === id)].spinTime || \"\";\r\n    initTime = feedData[feedData.findIndex(datum => datum._id === id)].time || \"\";\r\n    initTasktype_id = feedData[feedData.findIndex(datum => datum._id === id)].taskType;\r\n  }\r\n  //set the initial states of name\r\n  const [taskName, setTaskname] = useState(initTaskname);\r\n  const [spinTime, setSpintime] = useState(initSpintime);\r\n  const [time, setTime] = useState(initTime);\r\n  const [taskTypeId, setTasktypeId] = useState(initTasktype_id);\r\n  const dispatch = useDispatch();\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  const [taskTypeName, setTypeName] = useState(\"\")\r\n\r\n  useEffect( () => {\r\n    taskTypes.forEach(item => {\r\n      if ( item._id === taskTypeId){\r\n        setTypeName(item.name)\r\n        console.log(taskTypeName)\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  /**\r\n   * callbacks to monitor the change of the links, comment and tags\r\n   */\r\n  const onChangeTaskname = useCallback(\r\n    (e) => {\r\n      setTaskname(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeSpintime = useCallback(\r\n    (e) => {\r\n      setSpintime(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeTime = useCallback(\r\n    (e) => {\r\n      setTime(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  const onChangeTasktype = useCallback(\r\n    (e) => {\r\n      setTasktypeId(e.target.value);\r\n      taskTypes.forEach(item => {\r\n        if ( item._id === e.target.value){\r\n          setTypeName(item.name)\r\n        }\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  /**\r\n   * callback to control on and off state of the modal\r\n   */\r\n  const handleClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, [setOpen]);\r\n\r\n  /**\r\n   * callback to handle the adding or updating\r\n   */\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!taskName) return;\r\n      if ((taskTypeName === \"Test Assignment\" ) || (spinTime && time))\r\n        if (isAdd) {\r\n          //Add a new link\r\n          dispatch(taskActions.addTasks({ name: taskName, spinTime, time, taskType: taskTypeId }));\r\n        } else {\r\n          //update the selected link\r\n          dispatch(taskActions.updateTasks({ _id: id, name: taskName, spinTime, time, taskType: taskTypeId }));\r\n        }\r\n      handleClose();\r\n    },\r\n    [dispatch, handleClose, id, isAdd, spinTime, time, taskTypeId, taskName],\r\n  );\r\n\r\n  /**\r\n   * title and subheader of the edit modal.\r\n   */\r\n  const title = isAdd ? `Add ${modalDescription[Number(pageIndex)]}` : `Update ${modalDescription[Number(pageIndex)]}`;\r\n  const subheader = isAdd ? `You can submit your new ${modalDescription[Number(pageIndex)]}.` : `You can update your ${modalDescription[Number(pageIndex)]}.`\r\n\r\n  return (\r\n    <div >\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent className=\"content-wrapper\">\r\n          <DialogContentText className=\"subheader\">\r\n            {subheader}\r\n          </DialogContentText>\r\n          <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Task Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={taskTypeId}\r\n                onChange={onChangeTasktype}\r\n                label=\"Task Type\"\r\n              >\r\n                {taskTypes.map(taskType => (\r\n                  <MenuItem value={taskType._id} key={taskType._id}>{taskType.name}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                label=\"Task Name\"\r\n                name=\"Task Name\"\r\n                variant=\"outlined\"\r\n                value={taskName}\r\n                onChange={onChangeTaskname}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextValidator\r\n                label=\"Spin Time\"\r\n                name=\"Spin Time\"\r\n                variant=\"outlined\"\r\n                value={spinTime}\r\n                disabled={taskTypeName === \"Test Assignment\" ? true : false}\r\n                className={classes.validatorForm}\r\n                onChange={onChangeSpintime}\r\n                validators={['required', 'isNumber']}\r\n                errorMessages={['This field is required', 'Number is required']}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextValidator\r\n                label=\"Time\"\r\n                name=\"Time\"\r\n                variant=\"outlined\"\r\n                disabled={taskTypeName === \"Test Assignment\" ? true : false}\r\n                value={time}\r\n                onChange={onChangeTime}\r\n                className={classes.validatorForm}\r\n                validators={['required', 'isNumber']}\r\n                errorMessages={['This field is required', 'Number is required']}\r\n              />\r\n            </FormControl>\r\n          </ValidatorForm>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n            Submit\r\n                        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EdittaskModal;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport EnhancedTable from '../../components/dataTable/EnhancedTable';\r\nimport { taskActions } from '../../actions/taskAction';\r\nimport EdittaskModal from '../../components/modals/EdittaskModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      display: 'flex',\r\n      marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst TasksPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  //create the open flag state and setState function to control the edit modal\r\n  const [open, setOpen] = React.useState(false);\r\n  //create the flag which decides the modal type of Add or update modal.\r\n  const [isAdd, setIsAdd] = React.useState({isAdd: true});\r\n\r\n  //get the current link lists from the store\r\n  const { tasks } = useSelector(state => state.tasks);\r\n  \r\n  const handleClickOpen = () => {\r\n    setIsAdd({isAdd: true});\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n      >\r\n          <Button \r\n              variant=\"contained\" \r\n              color=\"secondary\"\r\n              onClick={handleClickOpen}\r\n          >\r\n              Add Task\r\n          </Button>\r\n          <Grid item sm={12} md={12}>\r\n            <EnhancedTable feedData={tasks} setOpen={setOpen} setIsAdd={setIsAdd} pageIndex=\"1\"/>\r\n          </Grid>\r\n      </Grid>\r\n      {\r\n        open &&\r\n        <EdittaskModal feedData={tasks} open={open} setOpen={setOpen} isAdd={isAdd} pageIndex=\"1\"/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasksPage;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport EnhancedTable from '../../components/dataTable/EnhancedTable';\r\nimport { tasktypeActions } from '../../actions/tasktypeAction';\r\nimport EditModal from '../../components/modals/EditModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      display: 'flex',\r\n      marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst TasktypesPage = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const { taskTypes } = useSelector(state => state.taskTypes)\r\n  //create the open flag state and setState function to control the edit modal\r\n  const [open, setOpen] = React.useState(false);\r\n  //create the flag which decides the modal type of Add or update modal.\r\n  const [isAdd, setIsAdd] = React.useState({isAdd: true});\r\n\r\n  //get the current link lists from the store\r\n  \r\n  const handleClickOpen = () => {\r\n    setIsAdd({isAdd: true});\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n      >\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\"\r\n            onClick={handleClickOpen}\r\n        >\r\n          Add Task Type\r\n        </Button>\r\n        <Grid item sm={12} md={12}>\r\n          <EnhancedTable feedData={taskTypes} setOpen={setOpen} setIsAdd={setIsAdd} pageIndex=\"2\"/>\r\n        </Grid>\r\n      </Grid>\r\n      {\r\n        open &&\r\n        <EditModal feedData={taskTypes} open={open} setOpen={setOpen} isAdd={isAdd} pageIndex=\"2\"/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TasktypesPage;","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../actions/userActions'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Checkbox, Container, Button, Grid, makeStyles, Paper, TextField, Box, Typography } from '@material-ui/core'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 100\r\n  },\r\n  container: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 600,\r\n    margin: 'auto',\r\n  },\r\n  formContainer : {\r\n    margin: '30 auto',\r\n  },\r\n  formLayout: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nconst SigninPage = () => {\r\n  const classes = useStyles()\r\n  const navigate = useNavigate()\r\n  // console.log(location)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  // console.log\r\n  // const redirect = location.state ? location.state.from.pathname : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      setTimeout(() => navigate('/admin'), 3000)\r\n    }\r\n  }, [navigate, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box className={classes.container} maxWidth=\"xs\" boxShadow={3}>\r\n        <Typography component=\"div\">\r\n          <Box fontWeight=\"fontWeightBold\" m={1} textAlign=\"center\" fontSize=\"h5.fontSize\">\r\n            Sign In\r\n          </Box>\r\n        </Typography>\r\n        <ValidatorForm onSubmit={submitHandler} className={classes.formContainer}>\r\n          <Grid container spacing={5} className={classes.formLayout}>\r\n            <Grid item xs={8} >\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextValidator \r\n                    fullWidth \r\n                    id=\"Email\"\r\n                    label=\"Email\" \r\n                    name=\"email\" \r\n                    size=\"small\" \r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['This field is required', 'Email is not valid']}\r\n                    onChange={(e) => setEmail(e.target.value)}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextValidator\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Button color=\"primary\" fullWidth type=\"submit\" variant=\"contained\">\r\n                Sign in\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </ValidatorForm>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SigninPage\r\n","\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  API_URL,\r\n  SCHEDULE_REQUEST,\r\n  SCHEDULE_SET_SUCCESS, \r\n  SCHEDULE_GET_SUCCESS, \r\n  SCHEDULE_FAIL,\r\n  USER_SETTING_SAVE_REQUEST,\r\n  USER_SETTING_GET_REQUEST,\r\n  messageActionTypes\r\n} from '../helper/constants'\r\n\r\nconst setSchedules = (eventData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SCHEDULE_REQUEST\r\n    })\r\n    dispatch({\r\n      type: USER_SETTING_SAVE_REQUEST,\r\n      payload: eventData\r\n    })\r\n\r\n    const { data } = await axios.post(`${API_URL}/schedules`, eventData)\r\n    dispatch({\r\n      type: SCHEDULE_SET_SUCCESS,\r\n      payload: data\r\n    })\r\n    dispatch({\r\n      type: messageActionTypes.SET_MESSAGE,\r\n      payload: {\r\n        message: 'Successfully Scheduled',\r\n        success: true\r\n      }\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n    error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    dispatch({\r\n      type: messageActionTypes.SET_MESSAGE,\r\n      payload: {\r\n        message,\r\n       success: false\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst getSchdules = (email) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SCHEDULE_REQUEST\r\n    })\r\n\r\n    const { data } = await axios.post(`${API_URL}/schedules/get`, { email })\r\n\r\n    dispatch({\r\n      type: SCHEDULE_SET_SUCCESS,\r\n      payload: data.schedule\r\n    })\r\n\r\n    dispatch({\r\n      type: messageActionTypes.SET_MESSAGE,\r\n      payload: {\r\n        message: 'Successfully loaded',\r\n        success: true\r\n      }\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_SETTING_SAVE_REQUEST,\r\n      payload: data.userSetting\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n    error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n      dispatch({\r\n        type: messageActionTypes.SET_MESSAGE,\r\n        payload: {\r\n          message,\r\n          success: false\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const scheduleAction = {\r\n  setSchedules,\r\n  getSchdules\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    Slide\r\n} from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { scheduleAction } from '../../actions/scheduleActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      '& .content-wrapper' : {\r\n          minHeight: '100px',\r\n      }\r\n  },\r\n  form: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      margin: 'auto',\r\n      width: '70%'\r\n  },\r\n  formControl: {\r\n      marginTop: theme.spacing(2),\r\n      minWidth: 200,\r\n  },\r\n  validatorForm: {\r\n    width: '100%'\r\n  },\r\n  formControlLabel: {\r\n      marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst LoadModal = ({open, setOpen, loadData}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const { isLoading } = useSelector(state => state.schedule)\r\n\r\n    /**\r\n     * delete confirm function\r\n     */\r\n    // const confirm = useCallback(() => {\r\n    //     //When the user confirms to delete the links, the actual delete method triggers\r\n    //     // and then the modal fades\r\n    //     loadData();\r\n    //     setOpen(false);\r\n    // }, [loadData, setOpen]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, [setOpen]);\r\n\r\n    const onChangeEmail = useCallback((e) => {\r\n      setEmail(e.target.value)\r\n    }, [])\r\n\r\n    const handleSubmit = useCallback((e) => {\r\n      e.preventDefault()\r\n      if(email === '') return \r\n      dispatch(scheduleAction.getSchdules(email))\r\n      if(!isLoading) {\r\n        handleClose()\r\n      }\r\n    }, [handleClose, email, dispatch, isLoading])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                className={classes.root}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Load</DialogTitle>\r\n                <DialogContent className=\"content-wrapper\">\r\n                    <DialogContentText className=\"subheader\">\r\n                        Do you want to load the saved schedule with your email?\r\n                    </DialogContentText>\r\n                    <>\r\n                      <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n                        <FormControl className={classes.formControl}>\r\n                          <TextValidator \r\n                              label=\"Email\"\r\n                              name=\"Email\"\r\n                              variant=\"outlined\"\r\n                              value={email}\r\n                              className={classes.validatorForm}\r\n                              onChange={onChangeEmail}\r\n                              validators={['required', 'isEmail']}\r\n                              errorMessages={['This field is required', 'Email is required']}\r\n                          />\r\n                        </FormControl>\r\n                      </ValidatorForm>\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n                        No\r\n                    </Button>\r\n                    <Button type=\"submit\" onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadModal","import { useCallback, useEffect, useMemo, useState } from 'react';\r\n// import 'date-fns';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { scheduleAction } from '../actions/scheduleActions'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { weeks } from '../helper/constants'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { getTimeFromMins, getTimeFromHours } from '../helper/utils'\r\nimport LoadModal from './modals/LoadModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: 'Monda'\r\n  },\r\n  forminput: {\r\n    width: '90%',\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  select : {\r\n    paddingLeft: 5\r\n  },\r\n  button : {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const { exams } = useSelector((state) => state.exams)\r\n  const { userSetting } = useSelector((state) => state.userSetting);\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  // const [errorText, setErrortext] = useState('');\r\n  const [selectedExamId, setSelectedexamId] = useState('')\r\n  const [availableDays, setAvailabledays] = useState([])\r\n  const [hours, setHours] = useState('');\r\n  const [mins, setMins] = useState('');\r\n  const [testDate, setTestdate] = useState('')\r\n  const [autoTestDate, setautoTestdate] = useState('true')\r\n  const [reminder, setReminder] = useState(userSetting.reminder)\r\n  const [sync, setSync] = useState(userSetting.sync)\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const [loaded, setLoaded] = useState(false)\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setUsername(userSetting.username ? userSetting.username : '');\r\n    setEmail(userSetting.email ? userSetting.email : '');\r\n    setSelectedexamId(userSetting.selectedExamId ? userSetting.selectedExamId : '');\r\n    setAvailabledays(userSetting.workDays ? userSetting.workDays : weeks);\r\n    setHours(userSetting.workHours ? getTimeFromHours(userSetting.workHours): 0);\r\n    setMins(userSetting.workHours ? getTimeFromMins(userSetting.workHours): 0);\r\n    setTestdate(userSetting.targetTestDate ? new Date(userSetting.targetTestDate) : new Date());\r\n    setautoTestdate(userSetting.autoTestDate ? 'true' : 'false');\r\n    setReminder(userSetting.reminder ? userSetting.reminder : false);\r\n    setSync(userSetting.sync ? userSetting.sync : false);\r\n  }, [userSetting]);\r\n\r\n  const handleUsername = useCallback((e) => {\r\n    setSubmitted(false);\r\n    setUsername(e.target.value)\r\n  }, [])\r\n\r\n  const wholeSpentTime = useMemo(() => {\r\n    if(selectedExamId === '') return ''\r\n    const selectedExam = exams.filter(exam => exam._id === selectedExamId)\r\n    return selectedExam.length > 0 && selectedExam[0].tasks.reduce((accu, task) => {\r\n      return accu + task.time\r\n    }, 0)\r\n  }, [exams, selectedExamId])\r\n\r\n\r\n  const handleEmail = useCallback((e) => {\r\n    setEmail(e.target.value)\r\n    setSubmitted(false);\r\n  }, [])\r\n\r\n  const formatTime = useCallback((time) => {\r\n    let hrs = Math.floor(time / 60)\r\n    let mins = Math.floor(time % 60)\r\n    let $hrs = hrs > 1 ? 'hours' : (hrs === 0 ? '' : 'hour')\r\n    let $min = 'minutes'\r\n    return `${hrs} ${$hrs} ${mins} ${$min}`\r\n  }, [])\r\n\r\n  const handleExamchange = useCallback((e) => {\r\n    setSelectedexamId(e.target.value)\r\n    setSubmitted(false);\r\n  }, [])\r\n\r\n  const handleAllChecked = useCallback((event) => {\r\n    let availabledays = availableDays\r\n   \r\n    availabledays.forEach(day => day.isChecked = event.target.checked) \r\n    setAvailabledays([...availableDays])\r\n    setSubmitted(false);\r\n  }, [availableDays])\r\n\r\n  const handleCheckChieldElement = useCallback((event) => {\r\n    let availabledays = availableDays\r\n    availabledays.forEach(day => {\r\n      if (day.value === event.target.value)\r\n        day.isChecked =  event.target.checked\r\n      })\r\n    setAvailabledays([...availableDays])\r\n    setSubmitted(false);\r\n  }, [availableDays])\r\n\r\n  const handleTestdate = useCallback((e) => {\r\n    setautoTestdate(e.target.value)\r\n    setSubmitted(false);\r\n  }, [])\r\n\r\n  const handleSetDate = useCallback((date) => {\r\n    setTestdate(date)\r\n    setSubmitted(false);\r\n  }, [])\r\n  \r\n  const handleReminder = useCallback((e) => {\r\n    setReminder(e.target.checked)\r\n    setSubmitted(false);\r\n  }, [])\r\n\r\n  const handleSync = useCallback((e) => {\r\n    setSync(e.target.checked)\r\n    setSubmitted(false);\r\n  }, [])\r\n\r\n  const handleHours = useCallback((e) => {\r\n    setHours(e.target.value)\r\n    setSubmitted(false);\r\n  }, [])\r\n  const handleMins = useCallback((e) => {\r\n    setMins(e.target.value)\r\n    setSubmitted(false);\r\n  }, [])\r\n  \r\n  const loadHandler = useCallback(() => {\r\n    setOpen(true)\r\n  }, [setOpen])\r\n\r\n  const submitHandler = useCallback((e) => {\r\n    e.preventDefault()\r\n    // let workDays = availableDays.filter(day => day.isChecked);\r\n    // if(!workDays.length) return\r\n    let workHours = Number(hours) * 60 + Number(mins)\r\n    let targetTestDate = testDate\r\n    let auto = autoTestDate === 'true' ? true : false\r\n    let data = {\r\n      username, email, selectedExamId, workDays: availableDays, workHours, reminder, sync, targetTestDate, autoTestDate : auto\r\n    }\r\n    dispatch(scheduleAction.setSchedules(data))\r\n    \r\n    setSubmitted(true)\r\n    \r\n  }, [dispatch, selectedExamId, availableDays, reminder, sync, hours, username, email, autoTestDate, testDate, mins])\r\n\r\n  return (\r\n    <div className='app-sidebar'>\r\n      <ValidatorForm onSubmit={submitHandler} className={classes.root}>\r\n        <div className=\"app-sidebar-logo\">\r\n          <a href=\"https://securitiesce.com\">\r\n            <img src=\"https://securitiesce.com/media/securitiesce_logo.png\" alt=\"\"/>\r\n          </a>\r\n        </div>\r\n        <div className=\"app-sidebar-section\">\r\n          <h2>Username</h2>\r\n          <TextValidator \r\n            id=\"username\" \r\n            value={username} \r\n            onChange={handleUsername} \r\n            className={classes.forminput}\r\n            validators={['required']}\r\n            errorMessages={['This field is required']}\r\n          />\r\n        </div>\r\n        <div className=\"app-sidebar-section\">\r\n          <h2>Email</h2>\r\n          <TextValidator \r\n            id=\"email\" \r\n            value={email} \r\n            onChange={handleEmail} \r\n            className={classes.forminput}\r\n            validators={['required', 'isEmail']}\r\n            errorMessages={['This field is required', 'Email is not valid']}\r\n          />\r\n        </div>\r\n        <div className='app-sidebar-section'>\r\n          <h2>Exams</h2>\r\n          <FormControl className={classes.forminput}>\r\n            <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n            <Select\r\n              className={classes.select}\r\n              required\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={selectedExamId}\r\n              onChange={handleExamchange}\r\n            >\r\n              {exams && exams.map((exam, id) => (\r\n                <MenuItem value={exam._id} key={exam._id}>{ exam.name }</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className='app-sidebar-section'>\r\n          <h2>Available Days</h2>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleAllChecked}\r\n                name=\"checkall\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Check/Uncheck all\"\r\n          />\r\n          <ul>\r\n            {\r\n              availableDays && availableDays.map((day, id) => {\r\n                return (\r\n                  <li key={id}>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={day.isChecked}\r\n                          onChange={handleCheckChieldElement}\r\n                          value={day.value}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label={day.value}\r\n                    />\r\n                  </li>)\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='app-sidebar-section'>\r\n          <h2>Test Date</h2>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\"></FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={autoTestDate} onChange={handleTestdate} >\r\n              <FormControlLabel value=\"true\" control={<Radio color=\"primary\"/>} label=\"Auto Test Date\" />\r\n              {autoTestDate === 'true' && (\r\n                  <>\r\n                    \r\n                    <div className='app-sidebar-section subsection'>\r\n                      <h2>Hours per day</h2>\r\n                      <Grid container>\r\n                        <Grid item xs={6}>\r\n                          <TextValidator \r\n                            label=\"HH\"\r\n                            name=\"HH\"\r\n                            value={hours} \r\n                            onChange={handleHours} \r\n                            className={classes.forminput}\r\n                            validators={['required', 'isNumber', 'minNumber:0', 'maxNumber:24']}\r\n                            errorMessages={['This field is required', 'Input must be number', 'Invalid Number', 'Invalid Number']}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <TextValidator\r\n                            label=\"MM\" \r\n                            name=\"MM\"\r\n                            value={mins} \r\n                            onChange={handleMins} \r\n                            className={classes.forminput}\r\n                            validators={['required', 'isNumber', 'minNumber:0', 'maxNumber:59']}\r\n                            errorMessages={['This field is required', 'Input must be number', 'Invalid Number', 'Invalid Number']}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </>\r\n              )}\r\n              <FormControlLabel value=\"false\" control={<Radio color=\"primary\"/>} label=\"Your Test Date\" />\r\n              {autoTestDate === 'false' && (\r\n                <div>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    // label=\"Test Date\"\r\n                    value={testDate}\r\n                    onChange={handleSetDate}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    style={{margin: '0 2em'}}\r\n                  />\r\n                  </MuiPickersUtilsProvider>\r\n                </div>\r\n              )}\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n        </div>\r\n        <div className='app-sidebar-section'>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleReminder}\r\n                checked={reminder}\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Email Reminder\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                onChange={handleSync}\r\n                checked={sync}\r\n                name=\"checkedB\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Sync to Google or other calendar\"\r\n          />\r\n        </div>\r\n        <div className=\"app-sidebar-section flex-center\">\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} disabled={loaded} onClick={loadHandler}>\r\n            Load\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} disabled={submitted}>\r\n            Schedule\r\n          </Button>\r\n        </div>\r\n      </ValidatorForm>\r\n      <LoadModal \r\n        open={ open }\r\n        setOpen={ setOpen }\r\n        // loadData={ loadData }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","\r\nexport function getHashValues(hash) {\r\n  return Object.values(hash) // needs modern browser\r\n}\r\n\r\nexport function hashById(array) {\r\n  let hash = {}\r\n\r\n  for (let item of array) {\r\n    hash[item.id] = item\r\n  }\r\n\r\n  return hash\r\n}\r\n\r\nexport function excludeById(array, id) {\r\n  return array.filter((item) => item.id !== id)\r\n}\r\n\r\nexport function getTodayStr() {\r\n  return new Date().toISOString().replace(/T.*$/, '')\r\n}\r\n\r\nexport function getHead(type) {\r\n  return type.name.includes('Read') ? 'Chapter' : 'Video'\r\n\r\n}\r\n\r\n\r\nexport function getTimeFromMins(workHours) {\r\n  let mins = workHours % 60;\r\n\r\n  return mins\r\n}\r\n\r\nexport function getTimeFromHours(workHours) {\r\n  let hours = Math.floor(workHours / 60)\r\n  return hours\r\n}\r\n\r\nexport function strTohtml (str) {\r\n\tlet parser = new DOMParser();\r\n\tlet doc = parser.parseFromString(str, 'text/html');\r\n\treturn doc.body.firstChild.lastChild;\r\n};","import { makeStyles } from '@material-ui/core';\r\nimport React, { useCallback } from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  typography: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    fontSize: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n}));\r\n\r\nconst ScheduleModal = ({anchorEl, setAnchorEl, selectedSchedule}) => {\r\n  const classes = useStyles()\r\n  const closeModal = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={closeModal}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        className={classes.root}\r\n      >\r\n        <Typography className={classes.typography} variant=\"h3\">\r\n          <TitleIcon />{selectedSchedule.title}\r\n        </Typography>\r\n        <Typography className={classes.typography}>\r\n          <ListIcon /> {selectedSchedule.type}\r\n        </Typography>\r\n        <Typography className={classes.typography}>\r\n          <AccessTimeIcon/> {selectedSchedule.time} mins\r\n        </Typography>\r\n        {/* sfsdf */}\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScheduleModal;","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport Sidebar from '../../components/SideBar'\r\nimport { examsAction } from '../../actions/examsAction'\r\nimport ScheduleModal from '../../components/modals/ScheduleModal'\r\nimport { strTohtml } from '../../helper/utils'\r\n\r\nconst CalendarPage = () => {\r\n  const weekendsVisible = useSelector(state => state.weekendsVisible)\r\n  const dispatch = useDispatch()\r\n  const handleDates = useCallback((rangeInfo) => {\r\n    // dispatch(requestEvents(rangeInfo.startStr, rangeInfo.endStr))\r\n  }, [])\r\n  const { schedules, error } = useSelector(state => state.schedule);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedSchedule, setSelectedSchdule] = useState({})\r\n  console.log(\"CalendarPage started!\", new Date())\r\n  \r\n  useEffect(() => {\r\n    dispatch(examsAction.getExams())\r\n  }, [dispatch])\r\n\r\n  const handleEventClick = useCallback((event) => {\r\n    // setAnchorEl(null)\r\n    // console.log(event.el.innerHTML)\r\n    console.log(event.event)\r\n    const schedule = schedules.filter((schedule) => schedule.id === event.event._def.publicId)\r\n    // console.log(schedule[0])\r\n    schedule[0].title = event.event._def.title \r\n    schedule[0].time = event.event._def.extendedProps.time \r\n    setSelectedSchdule(schedule[0])\r\n    setAnchorEl(event.el);\r\n  }, [schedules])\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Sidebar />\r\n      <div className='app-main'>\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          headerToolbar={{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n          }}\r\n          initialView='dayGridMonth'\r\n          editable={false}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          dayMaxEvents={true}\r\n          weekends={weekendsVisible}\r\n          datesSet={handleDates}\r\n          events={schedules}\r\n          eventClick={handleEventClick}\r\n        />\r\n      </div>\r\n      <ScheduleModal \r\n        selectedSchedule={selectedSchedule} \r\n        anchorEl={anchorEl}\r\n        setAnchorEl={setAnchorEl} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarPage;\r\n\r\n","import { useSelector } from 'react-redux';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ROUTES } from '../routes/index'\r\n\r\nconst RouteGenerator = () => {\r\n  const { userInfo } = useSelector(state => state.userLogin)\r\n  const routing = useRoutes(ROUTES(userInfo && userInfo.isAdmin));\r\n\r\n  return routing\r\n}\r\n\r\nexport default RouteGenerator;","import { ExpandMore } from \"@material-ui/icons\";\r\nimport { Navigate } from \"react-router\";\r\nimport AdminDashboard from \"../pages/admin/AdminDashboard\";\r\nimport ExamEditPage from \"../pages/admin/ExamEditPage\";\r\nimport ExamsPage from \"../pages/admin/ExamsPage\";\r\nimport StudentsPage from \"../pages/admin/StudentsPage\";\r\nimport TasksPage from \"../pages/admin/TasksPage\";\r\nimport TasktypesPage from \"../pages/admin/TasktypesPage\";\r\nimport SigninPage from \"../pages/auth/SigninPage\";\r\nimport CalendarPage from \"../pages/calendar/calendarPage\";\r\n\r\nexport const ROUTES = isAdmin => [\r\n  {\r\n    path: '/',\r\n    element: <CalendarPage />,\r\n    exact: true,\r\n    text: \"Calendar Page\"\r\n  },\r\n  {\r\n    path: '/signin',\r\n    element: <SigninPage />,\r\n    exact: true,\r\n    text: \"Sign In page\"\r\n  },\r\n  {\r\n    path: 'admin',\r\n    element: isAdmin ? <AdminDashboard /> : <Navigate to=\"/signin\"/>,\r\n    exact: true,\r\n    children : [\r\n      {\r\n        path: '/', element: <ExamsPage />, text: \"Students Page\"\r\n      },\r\n      // {\r\n      //   path: 'students', element: <StudentsPage />, text: \"Students Page\"\r\n      // },\r\n      {\r\n        path: 'tasks', element: <TasksPage />, text: \"Tasks Page\"\r\n      },\r\n      {\r\n        path: 'tasktypes', element: <TasktypesPage />, text: \"Task types Page\"\r\n      },\r\n      {\r\n        path: 'exams/edit', element: <ExamEditPage />, text: \"Exam Edit Page\"\r\n      },\r\n      {\r\n        path: 'exams', element: <ExamsPage />, text: \"Exams Page\",\r\n      }\r\n    ]\r\n  }\r\n]","import React from 'react'\nimport RouteGenerator from './components/RouteGenerator'\n\nconst App = () => {\n  console.log(\"App started!\", new Date())\n  return (\n    <RouteGenerator />\n  )\n}\n\nexport default App;\n\n","import { hashById } from '../helper/utils'\r\n\r\nimport {\r\n  RECEIVE_EVENTS,\r\n  RECEIVE_EXAMS,\r\n  CREATE_EVENT,\r\n  UPDATE_EVENT,\r\n  DELETE_EVENT,\r\n  EXAMS_FAIL,\r\n  EXAMS_REQUEST,\r\n  EXAMS_GET_SUCCESS,\r\n  EXAMS_CREATE_SUCCESS,\r\n  EXAMS_UPDATE_SUCCESS,\r\n  EXAMS_DELETE_SUCCESS,\r\n  messageActionTypes\r\n } from '../helper/constants'\r\n\r\nconst initialState = {\r\n  isLoading : false,\r\n  exams     : []\r\n}\r\n\r\nexport const examsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EXAMS_REQUEST:\r\n      return { ...state, isLoading: true }\r\n    case EXAMS_GET_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        exams: action.payload \r\n      }\r\n    case EXAMS_CREATE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        exams: state.exams.concat(action.payload)\r\n      }\r\n    case EXAMS_UPDATE_SUCCESS:\r\n      const newState = [...state.exams]\r\n      let updated_index = newState.findIndex(state => state._id === action.payload._id)\r\n      newState[updated_index] = action.payload;\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        exams: newState \r\n      }\r\n    case EXAMS_DELETE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        exams: state.exams.filter(exam => !action.payload.includes(exam._id))\r\n      }\r\n\r\n    case EXAMS_FAIL:\r\n      return { \r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n       }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  TASK_TYPES_REQUEST,\r\n  TASK_TYPES_GET_SUCCESS,\r\n  TASK_TYPES_CREATE_SUCCESS,\r\n  TASK_TYPES_UPDATE_SUCCESS,\r\n  TASK_TYPES_DELETE_SUCCESS,\r\n  TASK_TYPES_FAIL,\r\n} from '../helper/constants'\r\n\r\nconst initialState = {\r\n  isLoading : false,\r\n  taskTypes     : []\r\n}\r\n\r\nexport const tasktypesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TASK_TYPES_REQUEST:\r\n      return { ...state, isLoading: true }\r\n    case TASK_TYPES_GET_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        taskTypes: action.payload \r\n      }\r\n    case TASK_TYPES_CREATE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        taskTypes: state.taskTypes.concat(action.payload)\r\n      }\r\n    case TASK_TYPES_UPDATE_SUCCESS:\r\n      const newState = [...state.taskTypes]\r\n      let updated_index = newState.findIndex(state => state._id === action.payload._id)\r\n      newState[updated_index] = action.payload;\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        taskTypes: newState \r\n      }\r\n    case TASK_TYPES_DELETE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        taskTypes: state.taskTypes.filter(type => !action.payload.includes(type._id))\r\n      }\r\n    case TASK_TYPES_FAIL:\r\n      return { \r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n       }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  TASKS_REQUEST,\r\n  TASKS_GET_SUCCESS,\r\n  TASKS_CREATE_SUCCESS,\r\n  TASKS_UPDATE_SUCCESS,\r\n  TASKS_DELETE_SUCCESS,\r\n  TASKS_FAIL\r\n} from '../helper/constants'\r\n\r\nconst initialState = {\r\n  isLoading : false,\r\n  tasks     : []\r\n}\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TASKS_REQUEST:\r\n      return { ...state, isLoading: true }\r\n    case TASKS_GET_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        tasks: action.payload \r\n      }\r\n    case TASKS_CREATE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        tasks: state.tasks.concat(action.payload)\r\n      }\r\n    case TASKS_UPDATE_SUCCESS:\r\n      const newState = [...state.tasks]\r\n      let updated_index = newState.findIndex(state => state._id === action.payload._id)\r\n      newState[updated_index] = action.payload;\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        tasks: newState \r\n      }\r\n    case TASKS_DELETE_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        tasks: state.tasks.filter(type => !action.payload.includes(type._id))\r\n      }\r\n    case TASKS_FAIL:\r\n      return { \r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n       }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  SCHEDULE_REQUEST,\r\n  SCHEDULE_SET_SUCCESS, \r\n  SCHEDULE_GET_SUCCESS, \r\n  SCHEDULE_FAIL\r\n} from '../helper/constants'\r\n\r\nconst initialState = {\r\n  isLoading : false,\r\n  schedules     : []\r\n}\r\n\r\nexport const scheduleReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SCHEDULE_REQUEST:\r\n      return { ...state, isLoading: true }\r\n    case SCHEDULE_SET_SUCCESS:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        schedules: action.payload \r\n      }\r\n    case SCHEDULE_FAIL:\r\n      return { \r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n       }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  USER_SETTING_SAVE_REQUEST\r\n} from '../helper/constants'\r\n\r\nconst initialState = {\r\n  isLoading : false,\r\n  userSetting     : {}\r\n}\r\n\r\nexport const userSettingReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case USER_SETTING_SAVE_REQUEST:\r\n      return { \r\n        ...state,\r\n        isLoading: false, \r\n        userSetting: {\r\n          ...state.userSetting,\r\n          ...action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { messageActionTypes } from \"../helper/constants\";\r\n\r\nconst initialState = {};\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n    const { type, payload, } = action;\r\n\r\n    switch (type) {\r\n        case messageActionTypes.SET_MESSAGE:\r\n            return { message: payload.message, success: payload.success, info: payload.info };\r\n\r\n        case messageActionTypes.CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { eventsById, examsReducer } from './reducers/examReducer'\r\nimport { usersLoginReducer } from './reducers/usersReducer'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { tasktypesReducer } from './reducers/tasktypesReducer'\r\nimport { tasksReducer } from './reducers/tasksReducer'\r\nimport { scheduleReducer } from './reducers/scheduleReducer'\r\nimport { userSettingReducer } from './reducers/userSettingReducer'\r\nimport { messageReducer } from './reducers/messageReducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n} \r\n\r\nconst rootReducer = combineReducers({\r\n  // eventsById: eventsById,\r\n  exams: examsReducer,\r\n  userLogin: usersLoginReducer,\r\n  taskTypes: tasktypesReducer,\r\n  tasks: tasksReducer,\r\n  schedule: scheduleReducer,\r\n  userSetting: userSettingReducer,\r\n  message: messageReducer\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nlet store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\nlet persistor = persistStore(store)\r\n\r\nexport default () => {\r\n  return {store, persistor}\r\n};\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from '../helper/constants'\r\n\r\nexport const usersLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { messageActionTypes } from '../helper/constants';\r\n\r\n/**\r\n * \r\n * @param {*} children children component\r\n * It is a toaster wrapper \r\n */\r\nconst Toaster = ({children}) => {\r\n\r\n    const { addToast } = useToasts();\r\n    /**\r\n     * dispatch function from the store\r\n     */\r\n    const dispatch = useDispatch();\r\n    /**\r\n     * to get message state from the store\r\n     */\r\n    const { message, success, info } = useSelector(state => state.message);\r\n    /**\r\n     * whenever message state changes, the inner part triggers.\r\n     * \r\n     */\r\n    useEffect(() => {\r\n        if(!message) {\r\n            return;\r\n        }\r\n        addToast(message, {\r\n            appearance: info ? 'warning' : (success ? 'success' : 'error'),\r\n            autoDismiss: true\r\n        });\r\n        //after some time, message clears.\r\n        const timeId = setTimeout(() => dispatch({type: messageActionTypes.CLEAR_MESSAGE}), 5000)\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [message, addToast, dispatch, info, success]);\r\n    \r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Toaster;","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ToastProvider } from 'react-toast-notifications';\nimport './main.css'\nimport persistorBuilder from './store'\nimport { BrowserRouter } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'\nimport Toaster from './components/Toaster'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": `\"Monda\", sans-serif`,\n  }\n});\n\nconst {store, persistor} = persistorBuilder()\n\nrender(\n  <MuiThemeProvider theme={THEME}>\n    <BrowserRouter history={createBrowserHistory()}>\n      <Provider store={store}>\n        <ToastProvider\n          autoDismiss\n          autoDismissTimeout={6000}\n          placement=\"top-center\"\n        >\n          <PersistGate loading={null} persistor={persistor}>\n            <Toaster>\n              <App />\n            </Toaster>\n          </PersistGate>\n        </ToastProvider>\n      </Provider>\n    </BrowserRouter>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}